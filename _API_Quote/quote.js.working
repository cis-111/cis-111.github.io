// Homework Lab ZBooks 11.5 by Renee Hollomon
// This is tricky because a JSON object is returned if all is copacetic 
// but an array is returned if ["error":"foo"] 

"use strict;"
// window.alert("hello");
// declare too early, and	 multiple requests pile up on the url. 
let url = "https://wp.zybooks.com/quotes.php?";
window.addEventListener("DOMContentLoaded", function () {
   document.querySelector("#fetchQuotesBtn").addEventListener("click", function () {

      // Get values from drop-downs
      const topicDropdown = document.querySelector("#topicSelection");
		 //console.log("topicDropdown is: " + topicDropdown);
      const selectedTopic = topicDropdown.options[topicDropdown.selectedIndex].value;
		 console.log("selectedTopic is: " + selectedTopic);
      const countDropdown = document.querySelector("#countSelection");
		 //console.log("countDropdown is: " + countDropdown);
      const selectedCount = countDropdown.options[countDropdown.selectedIndex].value;
		 console.log("selectedCount is: " + selectedCount);
   
      // Get and display quotes
      fetchQuotes(selectedTopic, selectedCount);
   });
});

function fetchQuotes(topic, count) {
   // TODO: Modify to use XMLHttpRequest
	let url = "https://wp.zybooks.com/quotes.php?";	
	url = url + "topic=" + topic + "&count=" + count;
	console.log("url is: " + url);
	let xhr = new XMLHttpRequest();
	xhr.addEventListener("load", responseReceivedHandler);
	xhr.responseType = "json";
	xhr.open("GET", url);
	xhr.send();
}

function responseReceivedHandler() {
//console.log("begin responseReceivedHandler");
	if (this.status == 200) {
	  console.log("200 status received plus: " + this.response);
		let quoteObject = this.response;
		console.log("quotes are: " + quoteObject);
		console.log("stringify quotes are: " + JSON.stringify(quoteObject));
		console.log("error may be: " + quoteObject.error);
		if (! (! quoteObject.error)) {
			// an error has occured that must be put into the HTML
			console.log("quoteObject error is: " + quoteObject.error);
		  document.querySelector("#quotes").innerHTML = quoteObject.error;
		} else {
				let html = '<ol>';
				let quote;
				let source;
				for (x = 0; x < quoteObject.length; x++) {
					quote = quoteObject[x].quote;
					source = quoteObject[x].source;
					html += '<li>' + quote + " - " + source + '</li>'
				console.log(html);
				document.querySelector("#quotes").innerHTML = html;
			} 
				html += "</ol>";			
				document.querySelector("#quotes").innerHTML = html;
		}
	}
}
